"""
Calculates the distance between 2 random points in a point cloud based
on the files generated by the 3D and 2D models, over a set of random points.

Based on https://graphics.stanford.edu/courses/cs468-08-fall/pdf/osada.pdf

Adding another model requires changes to
the constants in pavlic/models/common.py and
importing the new model.

Example: https://github.com/radoss-org/Radstract/tree/main/examples/analysis/shapedistro.py
"""

import numpy as np
import trimesh


def calculate_d2(
    trimesh_object: trimesh.Trimesh, num_of_samples: int = 1000
) -> np.ndarray:
    """
    Calculates the distance between 2 random points in a point cloud based
    on the files generated by the 3D and 2D models, over a set of
    random points.

    :param trimesh_object: A trimesh object
    :param num_of_samples: The number of samples to take

    :return: An array of distances
    """

    points = trimesh_object.vertices

    # Sample random pairs
    n = len(points)
    indices = np.random.default_rng(42).choice(n, size=(num_of_samples, 2))

    # Calculate distances
    v1 = points[indices[:, 0]]
    v2 = points[indices[:, 1]]
    distances = np.linalg.norm(v1 - v2, axis=-1)

    return distances
